@{
    ViewBag.Title = "Listado - Catálogos";
}

@section breadcrumb {
    <li>
        <a href="@Url.Action("landing", "Home")"><span id="ListadoAvisoLlegada0020"></span></a>
    </li>
    <li class="active">
        <a href="@Url.Action("ListadoCatalogos", "Catalogos")"><span id="ListadoCatalogos0001"></span></a>
    </li>
    @* <li class="active">
        <a href="@Url.Action("ListadoCatalogos", "Catalogos")"><span id="ListadoCatalogos0002"></span></a>
    </li>*@
}

<div id="listadoCatalagos" class="form clearfix col-xs-12 col-sm-12 col-md-12 col-lg-12">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="row">
                <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-2">
                    <label id="ListadoCatalogos0003"></label>
                    <input id="listaCatalogos" class="" />
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="row">
                <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div id="grid" style="width: 100%"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
@section JavascriptGlobalVariables {
    nuevasCedulas=[];
    dataBoundCounter = 0;
    csvTypes=["application/csv","application/excel","application/lotus123","application/msexcel","application/vnd.lotus-1-2-3","application/vnd.ms-excel","application/vnd.ms-works","application/vnd.msexcel","application/wk1","application/wks","application/x-123","application/x-dos_ms_excel","application/x-excel","application/x-lotus123","application/x-ms-excel","application/x-msexcel","application/x-msworks","application/x-wks","application/x-xls","application/xlc","application/xls","text/anytext","text/comma-separated-values","text/csv","zz-application/zz-winassoc-wk1"];
    models = {
        "1": {
            id: "PatioID",
            fields: {
                PatioID: { editable: false, nullable: true },
                Nombre: { type: "string" },
                Descripcion: { type: "string" },
                Propietario: { validation: { required: true } },
                RequierePermisoAduana: { type: "string" }
            }
        },
        "2": {
            id: "ChoferID",
            fields: {
                ChoferID: { editable: false, nullable: true },
                Nombre: { type: "string", validation: { required: true } },
                TransportistaID: { type: "number", validation: { required: true } },
                TransportistaNombre: { type: "string", validation: { required: true } },
            }
        },
        "3": {
            id: "Id",
            fields: {
                Id: { editable: false, nullable: true },
                Nombre: { type: "string", validation: { required: true } },
            }
        },
        "4": {
            id: "TransportistaID",
            fields: {
                TransportistaID: { editable: false, nullable: true },
                ContactoID: { type: "number", validation: { required: true } },
                Contacto: { type: "string", validation: { required: true } },
                Nombre: { type: "string", validation: { required: true } },
                Descripcion: { type: "string" },
                Direccion: { type: "string" },
                Telefono: { type: "string" },
            }
        },
        "5": {
            id: "VehiculoID",
            fields: {
                VehiculoID: { editable: false, nullable: true },
                Placas: { type:"string",validation: { required: true } },
                TarjetaCirculacion: { type:"string",validation: { required: true } },
                PolizaSeguro: { type:"string"},
                choferID: { editable: false, nullable: true },
                choferNombre: { type:"string",validation: { required: true } },
                transportistaID: { editable: false, nullable: true },
                transportistaNombre: { type: "string", validation: { required: true } },
                relVehiculoChoferID: { editable: false, nullable: true },
                relVehiculoTransportistaID: { editable: false, nullable: true },
            }
        },
        "6": {
            id: "VehiculoID",
            fields: {
                VehiculoID: { editable: false, nullable: true },
                TractoID: { type:"number", validation: { required: true } },
                Placas: { type:"string",validation: { required: true } },
                Unidad: { type:"string"},
                Modelo : { type:"string"},
                choferID: { editable: false, nullable: true },
                choferNombre: { type:"string",validation: { required: true } },
                transportistaID: { editable: false, nullable: true },
                transportistaNombre: { type: "string", validation: { required: true } },
                relVehiculoChoferID: { editable: false, nullable: true },
                relVehiculoTransportistaID: { editable: false, nullable: true },
            }
        },
        "7": {
            id: "ProveedorID",
            fields: {
                ProveedorID: { editable: false, nullable: true },
                ContactoID: { type: "number", validation: { required: true } },
                Contacto: { type: "string", validation: { required: true } },
                Nombre: { type: "string", validation: { required: true } },
                Direccion: { type: "string" },
                Descripcion: { type: "string" },
                Telefono: { type: "string" }
            }
        },
        "8":{
            id:"Id",
            fields:{
                Id: { editable: false, nullable: true },
                Nombre: { type:"string",validation: { required: true } },
            }
        },
        "9":{
            id:"Id",
            fields:{
                Id: { editable: false, nullable: true },
                Nombre: { type:"string",validation: { required: true } },
            }
        },
        "10": {
            id: "FabricanteID",
            fields: {
                FabricanteID: { editable: false, nullable: true },
                ContactoID: { type: "number", validation: { required: true } },
                Contacto: { type: "string", validation: { required: true } },
                Nombre: { type: "string", validation: { required: true } },
                Descripcion: { type: "string", validation: { required: true } },
                Direccion: { type: "string", validation: { required: true } },
                Telefono: { type: "string", validation: { required: true } },
            }
        },
    }
    columnas = {
        "1": {
            "RequierePermisoAduana": { field: "RequierePermisoAduana", title: "Requiere permiso Aduana", editor: dropdownSiNo }
        },
        "2": {
            "TransportistaNombre": {
                field: "TransportistaNombre",
                title: "Nombre Transportista",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Transportista.Transportista.urlNoId + "?esAvisoEntrada=0&token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function (e) {
                            var data = getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].TransportistaID = data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].TransportistaNombre = data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "TransportistaID"
                    });
                }
            }
        },
        "4": {
            "Contacto": {
                field: "Contacto",
                title: "Contacto",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Contacto.Contacto.urlNoId + "?token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function (e) {
                            var data = getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].ContactoID = data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].Contacto = data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "ContactoID"
                    });
                }
            }
        },
        "5": {
            "choferNombre": {
                field: "choferNombre",
                title: "Nombre Chofer",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Chofer.Chofer.urlNoId + "?esAvisoEntrada=0&token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function(e) {
                            var data=getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].choferID=data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].choferNombre=data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "ChoferID"
                    });
                }
            },
            "transportistaNombre": {
                field: "transportistaNombre",
                title: "Nombre Transportista",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Transportista.Transportista.urlNoId + "?esAvisoEntrada=0&token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function(e) {
                            var data=getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].transportistaID=data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].transportistaNombre=data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "TransportistaID"
                    });
                }
            },
        },
        "6": {
            "choferNombre": {
                field: "choferNombre",
                title: "Nombre Chofer",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Chofer.Chofer.urlNoId + "?esAvisoEntrada=0&token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function(e) {
                            var data=getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].choferID=data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].choferNombre=data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "ChoferID"
                    });
                }
            },
            "transportistaNombre": {
                field: "transportistaNombre",
                title: "Nombre Transportista",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Transportista.Transportista.urlNoId + "?esAvisoEntrada=0&token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function(e) {
                            var data=getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].transportistaID=data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].transportistaNombre=data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "TransportistaID"
                    });
                }
            }
        },
        "7": {
            "Contacto": {
                field: "Contacto",
                title: "Contacto",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Contacto.Contacto.urlNoId + "?token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function (e) {
                            var data = getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].ContactoID = data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].Contacto = data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "ContactoID"
                    });
                }
            }
        },
        "10": {
            "Contacto": {
                field: "Contacto",
                title: "Contacto",
                editor: function (container, options) {
                    $("<input/>").attr("name", options.field).appendTo(container).kendoComboBox({
                        dataSource: {
                            transport: {
                                read: {
                                    dataType: "json",
                                    url: $Contacto.Contacto.urlNoId + "?token=" + Cookies.get("token")
                                }
                            }
                        },
                        close: function (e) {
                            var data = getDropData(e);
                            $("#grid").data("kendoGrid")._data[data.posicion].ContactoID = data.id;
                            $("#grid").data("kendoGrid")._data[data.posicion].Contacto = data.nombre;
                        },
                        dataTextField: "Nombre",
                        dataValueField: "ContactoID"
                    });
                }
            }
        },
    }
    }

@section JavascriptGlobalFunctions {
    function changeLanguageCall() {
        if ($("#listaCatalogos").data("kendoDropDownList").value()) {
            cargarInicialGrid($("#listaCatalogos").data("kendoDropDownList").value());
        }else{
            $("#grid").kendoGrid({ columns: [] });
        }
    };

    function getDropData(e){
        var id=e.sender._old;
        var nombre=e.sender._prev;
        var grid=$("#grid").data("kendoGrid");
        var dirty = $.map(grid._data, function(obj, index) {
            if(obj.dirty == true) {
                return index;
            }
        });
        return {id:id,nombre:nombre,posicion:dirty[dirty.length-1]}
    }

    function getUrl() {
        return $Catalogos.AdministracionCatalogos.urlNoId + "?catalogoID=" + $("#listaCatalogos").data("kendoDropDownList").value() + "&token=";
    }

    function removeGrid(){
        var contenedor = $("#grid").parent();
        $("#grid").remove();
        contenedor.append("<div id='grid'></div>");
    }

    function cargarInicialGrid(val) {
        loadingStart();
        removeGrid();
        var dataSGrid = getDataSourceGrid(val);
        $("#grid").kendoGrid({
            dataSource: dataSGrid,
            autoHeight: true,
            sortable: true,
            scrollable: false,
            filterable: true,
            pageable: {
                refresh: false,
                pageSizes: [10, 15, 20],
                info: false,
                input: false,
                numeric: true,
            },
            toolbar: ["create"],
            editable: "inline",
            save: function (e) {
                var catalogo = $("#listaCatalogos").data("kendoDropDownList").value();
                var grid = $("#grid").data("kendoGrid");
                var data=getDataFromModel(models[catalogo].fields,e.model);
                if(e.model.id!==null && e.model.id!==""){
                    var direccion=parseUrl(data,catalogo,"put");
                    grid.options.dataSource.options.transport.update.url=direccion;
                }else{
                    data[models[catalogo].id]="0";
                    var direccion=parseUrl(data,catalogo,"post");
                    grid.options.dataSource.options.transport.create.url=direccion;
                }
            },
            remove: function (e) {
                var catalogo = $("#listaCatalogos").data("kendoDropDownList").value();
                var grid = $("#grid").data("kendoGrid");
                var data = {};
                for (f in models[catalogo].fields) {
                    data[f] = e.model[f];
                }
                if(e.model.id!==null && e.model.id!==""){
                    var direccion=parseUrl(data,catalogo,"delete");
                    grid.options.dataSource.options.transport.destroy.url=direccion;
                }else{
                    alert(_dictionary.ListadoCatalogos0009[$("#language").data("kendoDropDownList").value()]);
                }
            },
            dataBound: function (e) {
                if (dataBoundCounter == 0) {
                    dataBoundCounter++;
                    $(".k-grid input.k-textbox").prop('readonly', true);
                    $(".k-grid td .k-button").text('');
                    $(".k-grid td:first-child, .k-grid td:last-child").css('text-overflow', 'clip');
                    var grid = $("#grid").data("kendoGrid");
                    grid.columns.push({ command: "edit", title: "Editar", width: "91px" });
                    grid.columns.push({ command: "destroy", title: "Borrar", width: "91px" });
                    for (c in columnas[$("#listaCatalogos").data("kendoDropDownList").value()]) {
                        var columna = $.grep(grid.columns, function (e) { return e.field == c; });
                        grid.columns[grid.columns.indexOf(columna[0])] = columnas[$("#listaCatalogos").data("kendoDropDownList").value()][c];
                    }
                    grid.options.columns=grid.columns;
                    var ids=$.grep(grid.columns, function(e){ if(e.field){return e.field.toString().toUpperCase().indexOf("ID")>-1;} });
                    ids.forEach(function(i){
                        i.field.length-i.field.toUpperCase().indexOf("ID")==2 ? grid.hideColumn(i.field) : null;
                    });
                    regenerarGrid();
                }
            }
        });
        loadingStop();
    };

    function getDataFromModel(fields,model){
        var data = {};
        for (f in fields) {
            data[f] = model[f];
        }
        return data;
    }

    function regenerarGrid(){
        var options = $("#grid").data("kendoGrid").options;
        $("#grid").data("kendoGrid").destroy();
        $("#grid").empty().kendoGrid(options);
    }

    function parseUrl(data, catalogo, method) {
        for(key in data){
            data[key]==="Si" ? data[key]=true : 0;
            data[key]==="No" ? data[key]=false : 0;
        }
        if (method !== "delete") {
            return getUrl() + Cookies.get("token") + "&data=" + encodeURIComponent(JSON.stringify(data));
        } else {
            return getUrl() + Cookies.get("token") + "&id=" + data[models[catalogo].id];
        }
    }

    function getDataSourceGrid(val) {
        return new kendo.data.DataSource({
            data: [],
            schema: {
                model: models[val]
            },
            serverPaging: false,
            serverFiltering: false,
            serverSorting: false,
            pageSize: 20,
            serverPaging: false,
            serverFiltering: false,
            serverSorting: false,
            transport: {
                read: {
                    url: getUrl() + Cookies.get("token"),
                    dataType: "json",
                    type: "GET",
                    cache: false
                },
                update:{
                    dataType:"json",
                    type:"PUT",
                    cache: false
                },
                destroy:{
                    dataType:"json",
                    type:"DELETE",
                    cache: false
                },
                create:{
                    dataType:"json",
                    type:"POST",
                    cache: false
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                }
            },
        });
    }

    $("#listaCatalogos").width("88%").kendoDropDownList({
        dataTextField: "value",
        dataValueField: "id",
        optionLabel: "Selecciona un catálogo",
        dataSource: {
            transport: {
                read: {
                    dataType: "json",
                    url: $Catalogos.AdministracionCatalogos.urlNoId + "?token=" + Cookies.get("token")
                }
            }
        },
        change: function (e) {
            dataBoundCounter = 0;
            if ($("#listaCatalogos").data("kendoDropDownList").value() && $("#listaCatalogos").data("kendoDropDownList").value()!="11") {
                nuevasCedulas=[];
                $("#cedbtns").remove();
                cargarInicialGrid($("#listaCatalogos").data("kendoDropDownList").value());
            }else if($("#listaCatalogos").data("kendoDropDownList").value()=="11"){
                $("#listaCatalogos").parent().parent().parent().append('<div id="cedbtns"><div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-2"> <label id="" for="fconversion">Factor de conversión</label> <input id="fconversion" type="number" class="general-input"/></div><div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-2"><label id="" for="fconversion">Carga masiva</label> <input type="file" name="File Upload" id="files" accept=".csv"/></div><div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-2"><label id="" for="fcarga">&nbsp;</label><button id="fcarga" class="btn" type="button">Cargar</button></div><a href="#" id="templateced">Descargar plantilla</a></div>');
                $Cedulas.Cedulas.read({}, { catalogoID:"11",token:Cookies.get("token") }).done(function (result){
                    $("#fconversion").val(result);
                });
                $("#fcarga").on("click",function(){
                    if(nuevasCedulas.length!=0){
                        var data=[];
                        nuevasCedulas.forEach(function(c){
                            data.push(getDataFromModel($("#grid").data("kendoGrid").options.dataSource.schema.model.fields,c));
                        })
                        $.post(parseUrl(data,$("#listaCatalogos").data("kendoDropDownList").value(),"post")).done(function(result){
                            regenerarGrid();
                        });
                    }else{
                        alert(_dictionary.ListadoCatalogos0010[$("#language").data("kendoDropDownList").value()]);
                    }
                })
                document.getElementById("files").addEventListener("change",function(evt){
                    if (!(window.File && window.FileReader && window.FileList && window.Blob)) {
                        alert(_dictionary.ListadoCatalogos0007[$("#language").data("kendoDropDownList").value()]);
                    } else {
                        var data = null;
                        var file = evt.target.files[0];
                        if(csvTypes.indexOf(file.type.toLowerCase())==-1){
                            this.value=null;
                            alert(_dictionary.ListadoCatalogos0008[$("#language").data("kendoDropDownList").value()]);
                        }else{
                            var reader = new FileReader();
                            reader.readAsText(file);
                            reader.onload = function(event) {
                                var csvData = event.target.result;
                                csvToJson(csvData,"CedulaID").forEach(function(c){
                                    if(validData(c)){
                                        $("#grid").data("kendoGrid").dataSource.insert(c);
                                    }else{
                                        c["valido"]=false;
                                        $("#grid").data("kendoGrid").dataSource.insert(c);
                                    }
                                });
                            };
                            reader.onerror = function() {
                                alert('Unable to read ' + file.fileName);
                            };
                            reader.onloadend=function(){
                                var valido=true;
                                var nuevos=$.grep($("#grid").data("kendoGrid").tbody.children(),function(n){
                                    return $("#grid").data("kendoGrid").dataItem(n).id===null;
                                });
                                nuevos.forEach(function(n){
                                    if($("#grid").data("kendoGrid").dataItem(n).valido!==false){
                                        n.style.backgroundColor="#E3FCCB";
                                        nuevasCedulas.push($("#grid").data("kendoGrid").dataItem(n));
                                    }else{
                                        n.style.backgroundColor="#FEDEE8";
                                        valido=false;
                                    }
                                });
                                if(!valido){
                                    alert(_dictionary.ListadoCatalogos0011[$("#language").data("kendoDropDownList").value()]);
                                }
                            }
                        }
                    }
                });
                removeGrid();
                $("#grid").kendoGrid({
                    columns: [
                        { field: "Diametro" },
                        { field: "CedulaA",title:"Cedula A" },
                        { field: "CedulaB",title:"Cedula B" },
                        { field: "CedulaC",title:"Cedula C" },
                        { field: "CedulaIn",title:"Cedula In" },
                        { field: "CedulaMM",title:"Cedula MM" },
                        { field: "Espesor" },
                    ],
                    dataSource: {
                        data: [],
                        schema: {
                            model: {
                                id: "CedulaID",
                                fields: {
                                    CedulaID: { type: "number", editable: false, nullable: true },
                                    Diametro: { type: "number", validation: { required: false } },
                                    CedulaA: { type: "string", validation: { required: false } },
                                    CedulaB: { type: "string", validation: { required: false } },
                                    CedulaC: { type: "string", validation: { required: false } },
                                    CedulaIn: { type: "number", validation: { required: false } },
                                    CedulaMM: { type: "number", validation: { required: false } },
                                    Espesor: { type: "number", validation: { required: true } },
                                }
                            }
                        },
                        serverPaging: false,
                        serverFiltering: false,
                        serverSorting: false,
                        pageSize: 20,
                        serverPaging: false,
                        serverFiltering: false,
                        serverSorting: false,
                        transport:{
                            read:{
                                url:$Catalogos.AdministracionCatalogos.urlNoId + "?catalogoID=11&token=" +Cookies.get("token"),
                                dataType:"json",
                                type:"GET",
                                cache: false
                            },
                            parameterMap: function(options, operation) {
                                if (operation !== "read" && options.models) {
                                    return {models: kendo.stringify(options.models)};
                                }
                            }
                        },
                        autoHeight: true,
                        sortable: false,
                        scrollable: false,
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    startswith: "Starts with",
                                    eq: "Is equal to",
                                    neq: "Is not equal to"
                                }
                            }
                        },
                        pageable: {
                            refresh: false,
                            pageSizes: [10, 15, 20],
                            info: false,
                            input: false,
                            numeric: true,
                        },
                        toolbar: ["create"],
                        save: function(e) {
                            console.log(e);
                        },
                        remove: function(e) {
                            console.log(e);
                        },
                        dataBound: function(e) {
                            console.log(e);
                        }
                    }
                });
            }
        }
    })

    function validData(c){
        var modelo=$("#grid").data("kendoGrid").options.dataSource.schema.model.fields;
        var valido=true;
        for(n in modelo){
            switch(modelo[n]["type"]){
                case "string":
                    if(modelo[n]["type"]!=typeof c[n]){
                        valido==false;
                    }
                    break;
                case "number":
                    if(!$.isNumeric(c[n])){
                        valido=false;
                    }
                    break;
                case "boolean":
                    if(!(true.toString()==c[n] || false.toString()==c[n])){
                        valido==false
                    }
                    break;
            }
            if((c[n]==null) && (modelo[n]["nullable"]==true)){
                valido=true;
            }
        }
        return valido;
    }

    function csvToJson(data,idField){
        data=data.split("\n");
        data.shift();
        data.pop();
        data=data.join("\n");
        data=data.split("\r").join("");
        var encabezados=Object.keys($("#grid").data("kendoGrid").options.dataSource.schema.model.fields);
        encabezados.splice(encabezados.indexOf(idField),1);
        var csv=[];
        try{
            data.split("\n").forEach(function(d,i){
                if(d.split(",").length===encabezados.length-(encabezados.length - $("#grid").data("kendoGrid").columns.length)){
                    var tmp={};
                    tmp[idField]=null;
                    d.split(",").forEach(function(cell,z){
                        tmp[encabezados[z]]=cell;
                    });
                    csv.push(tmp);
                }else{
                    throw -1;
                }
            })
        }catch(e){
            if (e!==-1){ 
                throw e;
            }else{
                alert(_dictionary.ListadoCatalogos0012[$("#language").data("kendoDropDownList").value()]);
            }
        }
        return csv;
    }

    function dropdownSiNo(container, options) {
        function getvalor(){ for(key in options.model){ if(options.model[key]==="Si" || options.model[key]==="No"){ return options.model[key] } } return "Ninguno"; };
        $('<input id="sinodrop" data-text-field="text" data-value-field="value" data-bind="value:' + options.field + '"/>')
        .appendTo(container)
        .kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: "Actual: "+getvalor(),
            dataSource: [
                { text: "Si", value: true },
                { text: "No", value: false }
            ]
        });
    }
};

@section JavascriptDocumentReadyFunctions {
};
    
@section JavascriptDocumentReadyHomeCookie {
//Cookies.set("home", true, { path: '/' });
//Cookies.set("navegacion", "7", { path: '/' });
};

</script>