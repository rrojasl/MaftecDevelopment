@{
    ViewBag.Title = "Listado - Catálogos";
}

@section breadcrumb {
    <li>
        <a href="@Url.Action("landing", "Home")"><span id="ListadoAvisoLlegada0020"></span></a>
    </li>
    <li>
        <a href="@Url.Action("Catalogos", "ListadoCatalogos")"><span id="ListadoCatalogos0001"></span></a>
    </li>
    <li class="active">
        <a href="@Url.Action("ListadoAvisoLlegada", "AvisoLlegada")"><span id="ListadoCatalogos0002"></span></a>
    </li>
}

<div class="form-group col-xs-12 col-sm-9 col-md-6 col-lg-5">
    @*<select id="listaCatalogos" class="form-group col-xs-12 col-sm-9 col-md-6 col-lg-5">
        <option disabled selected="true" value="---------">--------</option>
        <option value="transportistas">Transportistas</option>
        <option value="camiones">Camiones</option>
        <option value="choferes">Choferes</option>
        <option value="plana">Planas</option>
    </select>*@
    <input type="text" id="listaCatalogos"/>
</div>
<div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
    <div id="grid"></div>
</div>

<script>
@section JavascriptGlobalVariables {
    var url={
        "transportistas":$Transportista.Transportista.urlNoId+"?esAvisoEntrada=0&token=",
        "camiones":$Camion.Tracto.urlNoId+"?esAvisoEntrada=0&token=",
        "choferes":$Chofer.Chofer.urlNoId+"?esAvisoEntrada=0&token=",
        "plana":$Plana.Plana.urlNoId+"?token="
    };
}

@section JavascriptGlobalFunctions {
    function changeLanguageCall() {
        cargarInicialGrid("transportistas");
    };

    function cargarInicialGrid(val) {
        loadingStart();
        $("#grid").kendoGrid({
            dataSource: {
                data: [],
                schema: {
                    model: {
                        fields: {
                        }
                    }
                },
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false,
                pageSize: 20,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            },
            autoHeight: true,
            sortable: true,
            scrollable: false,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        eq: "Is equal to",
                        neq: "Is not equal to"
                    }
                }
            },
            pageable: {
                refresh: false,
                pageSizes: [10, 15, 20],
                info: false,
                input: false,
                numeric: true,
            },
            toolbar: ["create"],
            editable: "inline",
            dataBound: function (e) {
                $(".k-grid input.k-textbox").prop('readonly', true);
                $(".k-grid td .k-button").text('');
                $(".k-grid td:first-child, .k-grid td:last-child").css('text-overflow', 'clip');
            }
        });
        actualizarGrid(url[val]);
        loadingStop();
    };

    $("#listaCatalogos").kendoDropDownList({
        dataTextField: "value",
        dataValueField: "id",
        dataSource: {
            transport: {
                read: {
                    dataType: "json",
                    url: $Catalogos.AdministracionCatalogos.urlNoId+"?token="+Cookies.get("token")
                }
            }
        },
        change:function(e){
            var val=this.value();
            cargarInicialGrid(val);
        }
    })

    function actualizarGrid(direccion){
        var grid = $("#grid").data("kendoGrid");
        //var columnas=[];
        //var camposModelo={};
        //pruebas=lista;
        //var claves=Object.keys(lista[0]);
        //claves.forEach(function(clave){
        //    columnas.push({"field":clave,"title":clave});
        //    if($.isNumeric(lista[0][clave])){
        //        if(clave.toUpperCase().indexOf("ID")==-1){
        //            camposModelo[clave]={type: "number"}
        //        }else{
        //            camposModelo[clave]={type: "number",editable: false}
        //        }
        //    }else{
        //        camposModelo[clave]={type: "string"}
        //    }
        //})
        //columnas.push({ command: "edit", title: "Editar",width:"75px"});
        //columnas.push({ command: { text: _dictionary.ListadoAvisoLlegada0016[$("#language").data("kendoDropDownList").value()], click: function(){console.log("Borrar")} }, title: "Borrar",width:"75px"});
        var options=grid.options;
        //options.columns=columnas;
        //options.dataSource.data=lista;
        //options.dataSource.schema.model.fields=camposModelo;
        options.dataSource.transport={
            read:{
                url:direccion+Cookies.get("token"),
                dataType:"json"
            },
            update:{
                url:direccion+Cookies.get("token"),
                dataType:"json"
            },
            destroy:{
                url:direccion+Cookies.get("token"),
                dataType:"json"
            },
            create:{
                url:direccion+Cookies.get("token"),
                dataType:"json"
            },
            parameterMap: function(options, operation) {
                if (operation !== "read" && options.models) {
                    return {models: kendo.stringify(options.models)};
                }
            }
        };
        options.dataSource.schema.parse=function(response){
            response.forEach(function(r){
                console.log(r);
            })
            return response;
        }
        options.editable="inline";
        grid.destroy();
        $("#grid").empty().kendoGrid(options);
    }

    function Error(data) {
        if (data.ReturnCode) {
            if (data.ReturnCode != 200) {
                if (data.ReturnCode == 401) {
                    removeUserSession();
                    return true;
                } else {
                    displayMessage("notificationslabel0008", data.ReturnMessage, '2');
                    return false;
                }
            } else {
                return true;
            }
        } else {
            return true;
        }
    };
};

@section JavascriptDocumentReadyFunctions {
};
    
@section JavascriptDocumentReadyHomeCookie {
    //Cookies.set("home", true, { path: '/' });
    //Cookies.set("navegacion", "7", { path: '/' });
};

</script>
