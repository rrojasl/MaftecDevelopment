@{
    ViewBag.Title = "Dashboard - Despacho y Corte";
}

@section breadcrumb {
    <li>
        <a href="@Url.Action("landing", "Home")"><span id="DashboardDespachoCorte0001"></span></a>
    </li>
    <li class="active">
        <a href="@Url.Action("DashboardDespachoCorte", "DashboardDespachoCorte")"><span id="DashboardDespachoCorte0029"></span></a>
    </li>
}

<div class="form clearfix col-sm-12 col-md-12 col-lg-12">
    <div class="row">
        <div class="col-sm-12 col-md-12 col-lg-12">
            <div class="formNav filtersFields clearfix">
                <div class="row">
                    <div class="col-sm-3 col-md-4 col-lg-3 longButton">
                        <div class="button-section">
                            <button id="Nuevo" type="button" class="btn btn-yellow btn-newReception"><span id="DashboardDespachoCorte0002"></span></button>
                        </div>
                    </div>
                    <div class="col-sm-9 col-md-8 col-lg-9 filter-section">
                        <div class="row">
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0003"></label>
                                <input id="ClienteID" class="" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0004"></label>
                                <input id="ProyectoID" class="" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0005"></label>
                                <input id="FolioAvisoEntradaID" class="" />
                            </div>
                             <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0006"></label>
                                <input id="PackingList" class="" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0007"></label>
                                <input id="FechaInicial" class="" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0008"></label>
                                <input id="FechaFinal" class="" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0009"></label>
                                <input id="PeriodoTiempo" class="" />
                            </div>
                            <div class="col-sm-6 col-md-6 col-lg-3">
                                <label id="DashboardDespachoCorte0047"></label>
                                <input id="UnidadMedida" class="" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group col-sm-12 col-md-12 col-lg-12">
            <label id="DashboardDespachoCorte0011"></label>
            <div class="row">
                <div class="btn-group form-group col-sm-12 col-md-12 col-lg-12" role="group" arial-label="tabs">
                    <button id="btnOrdenesTrabajoAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0012"></label>
                        <span id="spanOrdenesTrabajoAccesorios"></span>
                    </button>
                    <button id="btnOrdenesTrabajoActivasAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0013"></label>
                        <span id="spanOrdenesTrabajoActivasAccesorios"></span>
                    </button>
                    <button id="btnPreDespacharAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0014"></label>
                        <span id="spanPreDespacharAccesorios"></span>
                    </button>
                    <button id="btnDespacharAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0015"></label>
                        <span id="spanDespacharAccesorios"></span>
                    </button>
                    <button id="btnEntregarAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0016"></label>
                        <span id="spanEntregarAccesorios"></span>
                    </button>
                    <button id="btnTravelerPendienteAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0017"></label>
                        <span id="spanTravelerPendienteAccesorios"></span>
                    </button>
                    <button id="btnDespachoAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0018"></label>
                        <span id="spanDespachoAccesorios"></span>
                    </button>
                    <button id="btnCorteAccesorios" class="btn btn-tab Accesorios">
                        <label id="DashboardDespachoCorte0019"></label>
                        <span id="spanCorteAccesorios"></span>
                    </button>
                </div>
            </div>
            <div id="divAccesorios" class="hidden">
                <div id="gridAccesorios"></div>
            </div>
        </div>
        <div class="form-group col-sm-12 col-md-12 col-lg-12">
            <label id="DashboardDespachoCorte0020"></label>
            <div class="row">
                <div class="btn-group form-group col-sm-12 col-md-12 col-lg-12" role="group" arial-label="tabs">
                    <button id="btnOrdenesTrabajoTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0021"></label>
                        <span id="spanOrdenesTrabajoTubos"></span>
                    </button>
                    <button id="btnOrdenesTrabajoActivasTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0022"></label>
                        <span id="spanOrdenesTrabajoActivasTubos"></span>
                    </button>
                    <button id="btnPreDespacharTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0023"></label>
                        <span id="spanPreDespacharTubos"></span>
                    </button>
                    <button id="btnDespacharTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0024"></label>
                        <span id="spanDespacharTubos"></span>
                    </button>
                    <button id="btnEntregarTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0025"></label>
                        <span id="spanEntregarTubos"></span>
                    </button>
                    <button id="btnTravelerPendienteTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0026"></label>
                        <span id="spanTravelerPendienteTubos"></span>
                    </button>
                    <button id="btnDespachoTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0027"></label>
                        <span id="spanDespachoTubos"></span>
                    </button>
                    <button id="btnCorteTubos" class="btn btn-tab Tubos">
                        <label id="DashboardDespachoCorte0028"></label>
                        <span id="spanCorteTubos"></span>
                    </button>
                </div>
            </div>
            <div id="divTubos" class="hidden">
                <div id="gridTubos"></div>
            </div>
        </div>
    </div>
</div>

<input id="hdAccionFiltradoTubos" type="hidden" />
<input id="hdAccionFiltradoAccesorios" type="hidden" />
<script>
    @section JavascriptDocumentReadyHomeCookie {
        Cookies.set("home", true, { path: '/' });
        Cookies.set("navegacion", "28", { path: '/' });
    }
    @section JavascriptGlobalVariables {
    var Proyecto = {}, Cliente = {}, FolioAvisoEntrada = {}, PackingList = {};
    var FechaInicial, FechaFinal, PeriodoTiempo = {}, resultadoJson, UnidadMedida = {};
    var _despachoUrl = "@Url.Action("Despacho", "Despacho")";
    }

    @section JavascriptGlobalFunctions {
        function changeLanguageCall() {
            CargarGridTubos();
            CargarGridAccesorios();
            CrearPeriodoTiempo();
            CrearUnidadMedida();
        };
        function changeDatePickerDateFormat(datePickerOptions) {
            FechaInicial.setOptions(datePickerOptions);
            FechaFinal.setOptions(datePickerOptions);
        };

        function CargaInicial() {
            $("#Nuevo").click(function () {
                var url = "@Url.Action("Despacho", "Despacho")";
                window.location.href = url + "?leng=" + $("#language").data("kendoDropDownList").value();
            });

            //Botones Dashboard
            //Accesorios
            $("#btnOrdenesTrabajoAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("1"); AccionesListado("1", 2); });
            $("#btnOrdenesTrabajoActivasAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("2"); AccionesListado("2", 2); });
            $("#btnPreDespacharAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("3"); AccionesListado("3", 2); });
            $("#btnDespacharAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("4"); AccionesListado("4", 2); });
            $("#btnEntregarAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("5"); AccionesListado("5", 2); });
            $("#btnTravelerPendienteAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("6"); AccionesListado("6", 2); });
            $("#btnDespachoAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("7"); AccionesListado("7", 2); });
            $("#btnCorteAccesorios").click(function () { MostrarGrid(2); tabActivoAccesorios("8"); AccionesListado("8", 2); });

            //Tubos
            $("#btnOrdenesTrabajoTubos").click(function () { MostrarGrid(1); tabActivoTubos("1"); AccionesListado("1", 1); });
            $("#btnOrdenesTrabajoActivasTubos").click(function () { MostrarGrid(1); tabActivoTubos("2"); AccionesListado("2", 1); });
            $("#btnPreDespacharTubos").click(function () { MostrarGrid(1); tabActivoTubos("3"); AccionesListado("3", 1); });
            $("#btnDespacharTubos").click(function () { MostrarGrid(1); tabActivoTubos("4"); AccionesListado("4", 1); });
            $("#btnEntregarTubos").click(function () { MostrarGrid(1); tabActivoTubos("5"); AccionesListado("5", 1); });
            $("#btnTravelerPendienteTubos").click(function () { MostrarGrid(1); tabActivoTubos("6"); AccionesListado("6", 1); });
            $("#btnDespachoTubos").click(function () { MostrarGrid(1); tabActivoTubos("7"); AccionesListado("7", 1); });
            $("#btnCorteTubos").click(function () { MostrarGrid(1); tabActivoTubos("8"); AccionesListado("8", 1); });
            

            $("#ProyectoID").kendoComboBox({
                dataTextField: "Nombre",
                dataValueField: "ProyectoID",
                select: function (e) {
                    var dataItem = this.dataItem(e.item.index());
                    CargarProyecto(dataItem.ProyectoID, dataItem.Nombre);
                },
                change: function (e) {
                    var value = this.value();
                    if (!value) {
                        Proyecto = {};
                    }
                    Filtros();
                },
                filter: "contains",
            });
            ObtenerProyecto();

            $("#ClienteID").kendoComboBox({
                dataTextField: "Nombre",
                dataValueField: "ClienteID",
                select: function (e) {
                    var dataItem = this.dataItem(e.item.index());
                    CargarCliente(dataItem.ClienteID, dataItem.Nombre);
                },
                change: function (e) {
                    var value = this.value();
                    if (!value) {
                        Cliente = {};
                    }
                    Filtros();
                },
                filter: "contains",
            });
            ObtenerCliente();

            $("#FolioAvisoEntradaID").kendoComboBox({
                dataTextField: "id",
                dataValueField: "value",
                select: function (e) {
                    var dataItem = this.dataItem(e.item.index());
                    CargarFolioAvisoEntrada(dataItem.id, dataItem.value);

                },
                change: function (e) {
                    var value = this.value();
                    if (!value) {
                        FolioAvisoEntrada = {};
                    }
                    Filtros();
                },
                filter: "contains",
            });
            ObtenerFoliosAvisoLlegada();

            $("#PackingList").kendoComboBox({
                dataTextField: "id",
                dataValueField: "value",
                select: function (e) {
                    var dataItem = this.dataItem(e.item.index());
                    CargarPackingList(dataItem.id);

                },
                change: function (e) {
                    var value = this.value();
                    if (!value) {
                        PackingList = {};
                    }
                    Filtros();
                },
                filter: "contains",
            });
            ObtenerPackingList();

            FechaInicial = new kendo.ui.DatePicker($("#FechaInicial"));
            FechaFinal = new kendo.ui.DatePicker($("#FechaFinal"));

            $("#FechaInicial").bind("change", function () {
                Filtros();
            });

            $("#FechaFinal").bind("change", function () {
                Filtros();
            });

            ObtenerFechasporDefecto();
            CantidadesDelMenuDashboardTubos();
            CantidadesDelMenuDashboardAccesorios();
        };

    function CargarGridTubos(dataSource, columnas, detailInit) {
        if($("#gridTubos").data("kendoGrid"))
            $("#gridTubos").empty(); // destroy the Grid

        $("#gridTubos").kendoGrid({
            dataSource: dataSource,
            autoHeight: true,
            sortable: true,
            scrollable: false,
            filterable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        eq: "Is equal to",
                        neq: "Is not equal to"
                    }
                }
            },
            detailInit: detailInit,
            pageable: {
                refresh: false,
                pageSizes: [10, 15, 20],
                info: false,
                input: false,
                numeric: true,
            },
            columns: columnas,
            dataBound: function (e) {
                $(".k-grid input.k-textbox").prop('readonly', true);
                $(".k-grid td .k-button").text('');
                $(".k-grid td:first-child, .k-grid td:last-child").css('text-overflow', 'clip');
            }
        });
       
        $("#gridTubos").data("kendoGrid").refresh();
    };
    function CargarGridAccesorios(datasource, columnas, detailInit) {
        if ($("#gridAccesorios").data("kendoGrid"))
            $("#gridAccesorios").empty(); // destroy the Grid
        
        $("#gridAccesorios").kendoGrid({
            dataSource: datasource,
            autoHeight: true,
            sortable: true,
            scrollable: false,
            filterable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        eq: "Is equal to",
                        neq: "Is not equal to"
                    }
                }
            },
            detailInit: detailInit,
            pageable: {
                refresh: false,
                pageSizes: [10, 15, 20],
                info: false,
                input: false,
                numeric: true,
            },
            columns: columnas,
            dataBound: function (e) {
                $(".k-grid input.k-textbox").prop('readonly', true);
                $(".k-grid td .k-button").text('');
                $(".k-grid td:first-child, .k-grid td:last-child").css('text-overflow', 'clip');
            }
        });
        $("#gridAccesorios").data("kendoGrid").refresh();
    };
    
    function CrearPeriodoTiempo() {
        $("#PeriodoTiempo").kendoComboBox({
            dataTextField: "Periodo",
            dataValueField: "PeriodoID",
            dataSource: [
                { "PeriodoID": "1", "Periodo": _dictionary.DashboardDespachoCorte0033[$("#language").data("kendoDropDownList").value()] },
                { "PeriodoID": "2", "Periodo": _dictionary.DashboardDespachoCorte0034[$("#language").data("kendoDropDownList").value()] },
                { "PeriodoID": "3", "Periodo": _dictionary.DashboardDespachoCorte0035[$("#language").data("kendoDropDownList").value()] },
                { "PeriodoID": "4", "Periodo": _dictionary.DashboardDespachoCorte0036[$("#language").data("kendoDropDownList").value()] },
                { "PeriodoID": "5", "Periodo": _dictionary.DashboardDespachoCorte0037[$("#language").data("kendoDropDownList").value()] }
            ],
            select: function (e) {
                var dataItem = this.dataItem(e.item.index());
                CargarPeriodoTiempo(dataItem.PeriodoID);
            },
            change: function (e) {
                var value = this.value();

                if (!value) {
                    PeriodoTiempo = {};
                }
                ObtenerFechasporPeriodo(value);
                Filtros();
            },
            filter: "contains",
        });
    };
    function CrearUnidadMedida() {
        $("#UnidadMedida").kendoComboBox({
            dataTextField: "UnidadMedida",
            dataValueField: "UnidadMedidaID",
            dataSource: [
                { "UnidadMedidaID": "1", "UnidadMedida": _dictionary.DashboardDespachoCorte0048[$("#language").data("kendoDropDownList").value()] },
                { "UnidadMedidaID": "2", "UnidadMedida": _dictionary.DashboardDespachoCorte0049[$("#language").data("kendoDropDownList").value()] },
                { "UnidadMedidaID": "3", "UnidadMedida": _dictionary.DashboardDespachoCorte0050[$("#language").data("kendoDropDownList").value()] },
                { "UnidadMedidaID": "4", "UnidadMedida": _dictionary.DashboardDespachoCorte0051[$("#language").data("kendoDropDownList").value()] },
            ],
            select: function (e) {
                var dataItem = this.dataItem(e.item.index());
                CargarUnidadMedida(dataItem.UnidadMedidaID);
            },
            change: function (e) {
                var value = this.value();

                if (!value) {
                    UnidadMedida = {};
                }
                Filtros();
            },
            filter: "contains",
        });
        //default
        $("#UnidadMedida").data("kendoComboBox").value(1);
    };
        function ObtenerAccionesListadoTubos(Listado) {
            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                Error(result);

                $("#spanOrdenesTrabajoTubos").html(result.OrdenesTrabajo ? result.OrdenesTrabajo : 0);
                $("#spanOrdenesTrabajoActivasTubos").html(result.OrdenesTrabajoActivas ? result.OrdenesTrabajoActivas : 0);
                $("#spanPreDespacharTubos").html(result.PreDespachar ? result.PreDespachar : 0);
                $("#spanDespacharTubos").html(result.Despachar ? result.Despachar : 0);
                $("#spanEntregarTubos").html(result.Entregar ? result.Entregar : 0);
                $("#spanTravelerPendienteTubos").html(result.TravelerPendiente ? result.TravelerPendiente : 0);
                $("#spanDespachoTubos").html(result.Despacho ? result.Despacho : 0);
                $("#spanCorteTubos").html(result.Corte ? result.Corte : 0);

            });
        };

        function ObtenerAccionesListadoAccesorios(Listado) {
            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                Error(result);

                $("#spanOrdenesTrabajoAccesorios").html(result.OrdenesTrabajo ? result.OrdenesTrabajo : 0);
                $("#spanOrdenesTrabajoActivasAccesorios").html(result.OrdenesTrabajoActivas ? result.OrdenesTrabajoActivas : 0);
                $("#spanPreDespacharAccesorios").html(result.PreDespachar ? result.PreDespachar : 0);
                $("#spanDespacharAccesorios").html(result.Despachar ? result.Despachar : 0);
                $("#spanEntregarAccesorios").html(result.Entregar ? result.Entregar : 0);
                $("#spanTravelerPendienteAccesorios").html(result.TravelerPendiente ? result.TravelerPendiente : 0);
                $("#spanDespachoAccesorios").html(result.Despacho ? result.Despacho : 0);
                $("#spanCorteAccesorios").html(result.Corte ? result.Corte : 0);

            });
        };
        function Filtros() {
            var Listado;
            var accionTubos = $("#hdAccionFiltradoTubos").val() ? $("#hdAccionFiltradoTubos").val() : "1";
            var accionAccesorios = $("#hdAccionFiltradoAccesorios").val() ? $("#hdAccionFiltradoAccesorios").val() : "1";

            AccionesListado(accionTubos,1);
            AccionesListado(accionAccesorios,2);
        };

        function ArregloListado(tipolistado, tipomaterial) {
            var Listado;
            Listado = { ProyectoID: "", ClienteID: "", FolioAvisoEntradaID: "", PackingListID: "", TipoMaterialID: "", FechaInicial: "", FechaFinal: "", token: "", TipoListado: "", UnidadMedida: "" };

            var d = new Date($("#FechaInicial").data("kendoDatePicker").value());
            var d1 = new Date($("#FechaFinal").data("kendoDatePicker").value());

            Listado.ProyectoID = $("#ProyectoID").data("kendoComboBox").value();
            Listado.ClienteID = $("#ClienteID").data("kendoComboBox").value();
            Listado.FolioAvisoEntradaID = FolioAvisoEntrada.FolioAvisoEntradaID ? FolioAvisoEntrada.FolioAvisoEntradaID : "";
            Listado.PackingListID = PackingList.PackingListID ? PackingList.PackingListID : "";
            Listado.TipoMaterialID = tipomaterial;
            Listado.FechaInicial = obtenerFormatoFechaConHora(d);
            Listado.FechaFinal = obtenerFormatoFechaConHora(d1);
            Listado.UnidadMedida = UnidadMedida.UnidadMedidaID ? UnidadMedida.UnidadMedidaID : "";
            Listado.token = Cookies.get("token");
            Listado.TipoListado = tipolistado;

            return Listado;
        };

        function CargaDatosGridTubos() {
            if ($("#gridTubos").data("kendoGrid")) {
                if (resultadoJson.length > 0) {
                    $("#gridTubos").data("kendoGrid").dataSource.data(resultadoJson);
                    $("#gridTubos").data("kendoGrid").dataSource.page(1);
                } else {
                    $("#gridTubos").data("kendoGrid").dataSource.data([]);
                    $("#gridTubos").data("kendoGrid").dataSource.page(0);
                };
                applySecurityPolicy(false);
            };
        };

        function CargaDatosGridAccesorios() {
            if ($("#gridAccesorios").data("kendoGrid")) {
                if (resultadoJson.length > 0) {
                    $("#gridAccesorios").data("kendoGrid").dataSource.data(resultadoJson);
                    $("#gridAccesorios").data("kendoGrid").dataSource.page(1);
                } else {
                    $("#gridAccesorios").data("kendoGrid").dataSource.data([]);
                    $("#gridAccesorios").data("kendoGrid").dataSource.page(0);
                };
                applySecurityPolicy(false);
            };
        };

        function DefinicionModeloOrdenesTrabajo() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            SpoolID: { type: "string" },
                            Spool: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };

        function DefinicionColumnasOrdenesTrabajo() {
            var columnas =
            [
                { field: "SpoolID", title: _dictionary.DashboardDespachoCorte0030[$("#language").data("kendoDropDownList").value()], filterable: true, template: "<a class='detailLink' onclick='MostrarDetalleOrdenesTrabajo(#:SpoolID#)'>#:SpoolID#</a>" },
                { field: "Spool", title: _dictionary.DashboardDespachoCorte0031[$("#language").data("kendoDropDownList").value()], filterable: true },
            ];
            return columnas;
        };

        function MostrarDetalleOrdenesTrabajo(spoolID) {
            alert("Por definir pantalla pre-despacho");
        };

        function OrdenesTrabajo(tipomaterial) {
            var Listado = ArregloListado("11", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloOrdenesTrabajo();
                    var columnas = DefinicionColumnasOrdenesTrabajo();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas, "");
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("1");
                    } else {
                        CargarGridAccesorios(dataSource, columnas,"");
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("1");
                    };
                    
                    
                };
                loadingStop();
            });
        };

        function DefinicionModeloOrdenesTrabajoActivas() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            SpoolID: { type: "string" },
                            Spool: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };
        function DefinicionColumnasOrdenesTrabajoActivas() {
            var columnas =
           [
               { field: "SpoolID", title: _dictionary.DashboardDespachoCorte0030[$("#language").data("kendoDropDownList").value()], filterable: true, template: "<a class='detailLink' onclick='MostrarDetalleOrdenesTrabajoActivas(#:SpoolID#)'>#:SpoolID#</a>" },
               { field: "Spool", title: _dictionary.DashboardDespachoCorte0031[$("#language").data("kendoDropDownList").value()], filterable: true },
           ];
            return columnas;
        };

        function MostrarDetalleOrdenesTrabajoActivas(spoolID) {
            alert("Por definir pantalla pre-despacho");
        };

        function OrdenesTrabajoActivas(tipomaterial) {
            var Listado = ArregloListado("12", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloOrdenesTrabajoActivas();
                    var columnas = DefinicionColumnasOrdenesTrabajoActivas();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas,"");
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("2");
                    } else {
                        CargarGridAccesorios(dataSource, columnas,"");
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("2");
                    };

                   
                };
                loadingStop();
            });

        };

        
        function DefinicionModeloPreDespachar() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            SpoolID: { type: "string" },
                            Spool: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };
        function DefinicionColumnasPreDespachar() {
            var columnas =
           [
               { field: "SpoolID", title: _dictionary.DashboardRecepcionAlmacenaje0033[$("#language").data("kendoDropDownList").value()], filterable: true, template: "<a class='detailLink' onclick='MostrarDetallePreDespachar(#:SpoolID#)'>#:SpoolID#</a>" },
               { field: "Spool", title: _dictionary.DashboardRecepcionAlmacenaje0036[$("#language").data("kendoDropDownList").value()], filterable: true }
           ];
            return columnas;
        };

        function MostrarDetallePreDespachar(spoolID) {
            alert("Por definir pantalla pre-despacho");
        };

        function PreDespachar(tipomaterial) {
            var Listado = ArregloListado("13", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloPreDespachar();
                    var columnas = DefinicionColumnasPreDespachar();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas,"");
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("3");
                    } else {
                        CargarGridAccesorios(dataSource, columnas,"");
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("3");
                    };
                };
                loadingStop();
            });

        };

        function DefinicionModeloEntregar() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            PickingTicket: { type: "string" },
                            EmpleadoEntrega: { type: "string" },
                            EmpleadoRecibe: { type: "string" },
                            FechaEntrega: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };
        function DefinicionColumnasEntregar() {
            var columnas =
           [
               { field: "PickingTicket", title: _dictionary.DashboardDespachoCorte0043[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "EmpleadoEntrega", title: _dictionary.DashboardDespachoCorte0044[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "EmpleadoRecibe", title: _dictionary.DashboardDespachoCorte0045[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "FechaEntrega", title: _dictionary.DashboardDespachoCorte0046[$("#language").data("kendoDropDownList").value()], filterable: true },
           ];
            return columnas;
        };

        function Entregar(tipomaterial) {
            var Listado = ArregloListado("14", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloEntregar();
                    var columnas = DefinicionColumnasEntregar();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas,"");
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("5");
                    } else {
                        CargarGridAccesorios(dataSource, columnas,"");
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("5");
                    };
                };
                loadingStop();
            });
        };

        function DefinicionModeloDespacho() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            SpoolID: { type: "string" },
                            Spool: { type: "string" },
                            CantidadMateriales: { type: "string" },
                            CantidadDespachados: { type: "string" },
                            FaltantesPorDespachar: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };

        function DefinicionColumnasDespacho() {
            var columnas =
           [
               { field: "ProyectoID", title: _dictionary.DashboardDespachoCorte0030[$("#language").data("kendoDropDownList").value()], filterable: true, hidden:true },
               { field: "SpoolID", title: _dictionary.DashboardDespachoCorte0030[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "Spool", title: _dictionary.DashboardDespachoCorte0031[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "CantidadMateriales", title: _dictionary.DashboardDespachoCorte0038[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "CantidadDespachados", title: _dictionary.DashboardDespachoCorte0039[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "FaltantesPorDespachar", title: _dictionary.DashboardDespachoCorte0040[$("#language").data("kendoDropDownList").value()], filterable: true, template: "<a class='detailLink' onclick='MostrarDetalleDespachar(#:SpoolID#,#:ProyectoID#)'>#:SpoolID#</a>" },
           ];
            return columnas;
        };

        function detailInit(e) {
            if(e.data.Detalle.length > 0) {
                $("<div/>").appendTo(e.detailCell).kendoGrid({
                    dataSource: {
                        data: e.data.Detalle,
                        schema: {
                            model: {
                                fields: {
                                    Etiqueta: { type: "string" },
                                    ItemCode: { type: "string" },
                                    Descripcion: { type: "string" },
                                    Cantidad: { type: "string" },
                                    TieneDespacho: { type: "string" },
                                }
                            }
                        }
                    },
                    autoBind: true,
                    scrollable: false,
                    sortable: false,
                    columns: [
                        { field: "Etiqueta", title: _dictionary.DashboardDespachoCorte0041[$("#language").data("kendoDropDownList").value()] },
                        { field: "ItemCode", title: _dictionary.DashboardDespachoCorte0052[$("#language").data("kendoDropDownList").value()] },
                        { field: "Descripcion", title: _dictionary.DashboardDespachoCorte0053[$("#language").data("kendoDropDownList").value()] },
                        { field: "Cantidad", title: _dictionary.DashboardDespachoCorte0054[$("#language").data("kendoDropDownList").value()] },
                        { field: "TieneDespacho", title: _dictionary.DashboardDespachoCorte0042[$("#language").data("kendoDropDownList").value()] },
                    ]
                });
            }
        }

        function Despacho(tipomaterial) {
            var Listado = ArregloListado("15", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloDespacho();
                    var columnas = DefinicionColumnasDespacho();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas, detailInit);
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("7");
                    } else {
                        CargarGridAccesorios(dataSource, columnas, detailInit);
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("7");
                    };
                };
                loadingStop();
            });
        };

        function DefinicionModeloIncidenciasAbiertas() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            NumeroUnico: { type: "string" },
                            CantidadIncidenciasAbiertas: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };

        function DefinicionColumnasIncidenciasAbiertas() {
            var columnas =
           [
               { field: "NumeroUnico", title: _dictionary.DashboardRecepcionAlmacenaje0045[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "CantidadIncidenciasAbiertas", title: _dictionary.DashboardRecepcionAlmacenaje0046[$("#language").data("kendoDropDownList").value()], filterable: true },
               //{ command: { text: _dictionary.DashboardRecepcionAlmacenaje0032[$("#language").data("kendoDropDownList").value()], click: cancelarIncidenciasAbiertas }, title: " ", width: "99px" }
           ];
            return columnas;
        };

        function cancelarIncidenciasAbiertas() {

        };
        function Corte(tipomaterial) {
            var Listado = ArregloListado("16", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloIncidenciasAbiertas();
                    var columnas = DefinicionColumnasIncidenciasAbiertas();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas,"");
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("8");
                    } else {
                        CargarGridAccesorios(dataSource, columnas,"");
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("8");
                    };
                };
                loadingStop();
            });
        };

        function DefinicionModeloDespachar() {
            var dataSource = new kendo.data.DataSource({
                data: resultadoJson,
                schema: {
                    model: {
                        fields: {
                            ProyectoID: { type: "string" },
                            SpoolID: { type: "string" },
                            Spool: { type: "string" },
                        }
                    }
                },
                pageSize: 10,
                serverPaging: false,
                serverFiltering: false,
                serverSorting: false
            });
            return dataSource;
        };

        function DefinicionColumnasDespachar() {
            var columnas =
           [
               { field: "ProyectoID", title: _dictionary.DashboardDespachoCorte0032[$("#language").data("kendoDropDownList").value()], filterable: true },
               { field: "SpoolID", title: _dictionary.DashboardDespachoCorte0030[$("#language").data("kendoDropDownList").value()], filterable: true, template: "<a class='detailLink' onclick='MostrarDetalleDespachar(#:SpoolID#,#:ProyectoID#)'>#:SpoolID#</a>" },
               { field: "Spool", title: _dictionary.DashboardDespachoCorte0031[$("#language").data("kendoDropDownList").value()], filterable: true },
           ];
            return columnas;
        };

        function MostrarDetalleDespachar(SpoolID, ProyectoID) {
            window.location.href = _despachoUrl + "?leng=" + $("#language").data("kendoDropDownList").value() + "&SpoolID=" + SpoolID + "&ProyectoID=" + ProyectoID;
        };

        function PorDespachar() {
            var Listado = ArregloListado("13", tipomaterial);

            $folioEntradaMaterial.Listado.read({}, { data: JSON.stringify(Listado) }).done(function (result) {
                if (Error(result)) {
                    resultadoJson = result;
                    var dataSource = DefinicionModeloDespachar();
                    var columnas = DefinicionColumnasDespachar();

                    if (tipomaterial == 1) {
                        CargarGridTubos(dataSource, columnas,"");
                        CantidadesDelMenuDashboardTubos();
                        CargaDatosGridTubos();
                        $("#hdAccionFiltradoTubos").val("4");
                    } else {
                        CargarGridAccesorios(dataSource, columnas,"");
                        CantidadesDelMenuDashboardAccesorios();
                        CargaDatosGridAccesorios();
                        $("#hdAccionFiltradoAccesorios").val("4");
                    };
                };
                loadingStop();
            });
        };

        function TravelerPendiente() {
            alert("falta definicion TravelerPendiente");
           @* var detalleIdeaUrl = "@Url.Action("GenerarOrdenAlmacenaje", "OrdenAlmacenaje")";
            window.location.href = detalleIdeaUrl + "?leng=" + $("#language").data("kendoDropDownList").value();*@
        };

        function MostrarGrid(tipomaterial) {
            if (tipomaterial == 1) {
                $("#divTubos").removeClass("hidden");
            } else {
                $("#divAccesorios").removeClass("hidden");
            };
        };
        
        function AccionesListado(accion,tipomaterial) {
            loadingStart();

            switch (accion) {
                case "1":
                    OrdenesTrabajo(tipomaterial);
                    break;
                case "2":
                    OrdenesTrabajoActivas(tipomaterial);
                    break;
                case "3":
                    PreDespachar(tipomaterial);
                    break;
                case "4":
                    PorDespachar(tipomaterial);
                    break;
                case "5":
                    Entregar(tipomaterial);
                    break;
                case "6":
                    TravelerPendiente(tipomaterial);
                    break;
                case "7":
                    Despacho(tipomaterial);
                    break;
                case "8":
                    Corte(tipomaterial);
                    break;
            }
        };

        function tabActivoTubos(AccionListado) {
            $(".btn-tab.Tubos").removeClass("active");
            switch (AccionListado) {
                case "1":
                    $("#btnOrdenesTrabajoTubos").addClass("active");
                    break;
                case "2":
                    $("#btnOrdenesTrabajoActivasTubos").addClass("active");
                    break;
                case "3":
                    $("#btnPreDespacharTubos").addClass("active");
                    break;
                case "4":
                    $("#btnDespacharTubos").addClass("active");
                    break;
                case "5":
                    $("#btnEntregarTubos").addClass("active");
                    break;
                case "6":
                    $("#btnTravelerPendienteTubos").addClass("active");
                    break;
                case "7":
                    $("#btnDespachoTubos").addClass("active");
                    break;
                case "8":
                    $("#btnCorteTubos").addClass("active");
                    break;
                default:
                    $("#btnOrdenesTrabajoTubos").addClass("active");
                    break;
            };
        };

        function tabActivoAccesorios(AccionListado) {
            $(".btn-tab.Accesorios").removeClass("active");
            switch (AccionListado) {
                case "1":
                    $("#btnOrdenesTrabajoAccesorios").addClass("active");
                    break;
                case "2":
                    $("#btnOrdenesTrabajoActivasAccesorios").addClass("active");
                    break;
                case "3":
                    $("#btnPreDespacharAccesorios").addClass("active");
                    break;
                case "4":
                    $("#btnDespacharAccesorios").addClass("active");
                    break;
                case "5":
                    $("#btnEntregarAccesorios").addClass("active");
                    break;
                case "6":
                    $("#btnTravelerPendienteAccesorios").addClass("active");
                    break;
                case "7":
                    $("#btnDespachoAccesorios").addClass("active");
                    break;
                case "8":
                    $("#btnCorteAccesorios").addClass("active");
                    break;
                default:
                    $("#btnOrdenesTrabajoAccesorios").addClass("active");
                    break;
            };
        };

        function CargarCliente(id, value) {
            Cliente = {};
            Cliente = { ClienteID: id, Nombre: value };
        };

        function CargarProyecto(id, value) {
            Proyecto = {};
            Proyecto = { ProyectoID: id, Nombre: value };
        };

        function CargarFolioAvisoEntrada(id, value) {
            FolioAvisoEntrada = {};
            FolioAvisoEntrada = { FolioAvisoEntradaID: id, FolioLlegadaMaterial: value };
        };

        function CargarPackingList(id) {
            PackingList = {};
            PackingList = { PackingListID: id };
        };
        
        function ObtenerCliente() {
            $Cliente.Cliente.read({ token: Cookies.get("token") }).done(function (result) {
                ControlErroresObjetosComboBox("ClienteID", result);
            });
        };

        function CargarPeriodoTiempo(id) {
            PeriodoTiempo = {};
            PeriodoTiempo = { PeriodoTiempo: id };
        };

        function CargarUnidadMedida(id) {
            UnidadMedida = {};
            UnidadMedida = { UnidadMedida: id };
        };
        function ObtenerProyecto() {
            $Proyecto.Proyecto.read({ token: Cookies.get("token") }).done(function (result) {
                ControlErroresObjetosComboBox("ProyectoID", result);
            });
        };

        function ObtenerFoliosAvisoLlegada() {
            $folioEntradaMaterial.Listado.read({ tipoListado: 1, token: Cookies.get("token"), parametroBusqueda: "" }).done(function (result) {
                ControlErroresObjetosComboBox("FolioAvisoEntradaID", result);
            });
        };
        function ObtenerPackingList() {
            $folioEntradaMaterial.Listado.read({ tipoListado: 18, token: Cookies.get("token"), parametroBusqueda: "" }).done(function (result) {
                ControlErroresObjetosComboBox("PackingList", result);
            });
        };

        function ObtenerFechasporPeriodo(id) {
            var fechaInicio = FechaFinal.value();
            var fechaFin = FechaFinal.value();

            if ($("#language").data("kendoDropDownList").value() == "es-MX") {
                format = "dd/MM/yyyy";
            } else {
                format = "MM/dd/yyyy";
            }

            var curr_date = fechaFin.getDate();
            var curr_month = fechaFin.getMonth() + 1;
            var curr_year = fechaFin.getFullYear();

            var fechaFinal = new Date(curr_year, curr_month - 1, curr_date);
            var fechaFinalkendo = kendo.parseDate(fechaFinal, format);

            switch (parseInt(id)) {
                case 1: //Semana Actual
                    fechaInicio.setDate(fechaInicio.getDate() - 7);
                    break;
                case 2: //Dos Semanas
                    fechaInicio.setDate(fechaInicio.getDate() - 14);
                    break;
                case 3: //Mes
                    fechaInicio.setMonth(fechaInicio.getMonth() - 1);
                    break;
                case 4: //Trimestre
                    fechaInicio.setMonth(fechaInicio.getMonth() - 3);
                    break;
                case 5: //Año
                    fechaInicio.setFullYear(fechaInicio.getFullYear() - 1);
                    break;
            }

            var curr_date0 = fechaInicio.getDate();
            var curr_month0 = fechaInicio.getMonth() + 1;
            var curr_year0 = fechaInicio.getFullYear();

            var fechaInicial = new Date(curr_year0, curr_month0 - 1, curr_date0);

            var fechaInicialkendo = kendo.parseDate(fechaInicial, format);

            $("#FechaInicial").data("kendoDatePicker").value(fechaInicialkendo);
            $("#FechaFinal").data("kendoDatePicker").value(fechaFinalkendo);
        };

        function ObtenerFechasporDefecto() {
            var fechaFinal = new Date();
            var fechainicio = new Date(fechaFinal.getTime() - (7 * 24 * 3600 * 1000));

            if ($("#language").data("kendoDropDownList").value() == "es-MX") {
                format = "dd/MM/yyyy";
            } else {
                format = "MM/dd/yyyy";
            };

            var curr_date0 = fechainicio.getDate();
            var curr_month0 = fechainicio.getMonth() + 1; //Months are zero based
            var curr_year0 = fechainicio.getFullYear();


            var curr_date = fechaFinal.getDate();
            var curr_month = fechaFinal.getMonth() + 1; //Months are zero based
            var curr_year = fechaFinal.getFullYear();


            var fechaInicial = new Date(curr_year0, curr_month0 - 1, curr_date0);
            var fechFinal = new Date(curr_year, curr_month - 1, curr_date);

            var fechaInicialkendo = kendo.parseDate(fechaInicial, format);
            var fechaFinalkendo = kendo.parseDate(fechFinal, format);

            $("#FechaInicial").data("kendoDatePicker").value(fechaInicialkendo);
            $("#FechaFinal").data("kendoDatePicker").value(fechaFinalkendo);
        };

        function Error(data) {
            if (data.ReturnCode) {
                if (data.ReturnCode!=200){
                    if (data.ReturnCode == 401) {
                        removeUserSession();
                    } else {
                        displayMessage("notificationslabel0009", data.ReturnMessage, '2');
                        return;
                    }
                } else {
                    return true;
                }
            } else {
                return true;
            }
        };
        function CantidadesDelMenuDashboardTubos() {
            var Listado;
            Listado = { ProyectoID: "", ClienteID: "", FolioAvisoEntradaID: "", PackingListID: "", TipoMaterialID: "", FechaInicial: "", FechaFinal: "", token: "", TipoListado: "", UnidadMedida: "" };

            var d = new Date($("#FechaInicial").data("kendoDatePicker").value());
            var d1 = new Date($("#FechaFinal").data("kendoDatePicker").value());

            Listado.ProyectoID = $("#ProyectoID").data("kendoComboBox").value();
            Listado.ClienteID = $("#ClienteID").data("kendoComboBox").value();
            Listado.FolioAvisoEntradaID = FolioAvisoEntrada.FolioAvisoEntradaID ? FolioAvisoEntrada.FolioAvisoEntradaID : "";
            Listado.PackingListID = PackingList.PackingListID ? PackingList.PackingListID : "";
            Listado.TipoMaterialID = 1;
            Listado.FechaInicial = obtenerFormatoFechaConHora(d);
            Listado.FechaFinal = obtenerFormatoFechaConHora(d1);
            Listado.token = Cookies.get("token");
            Listado.TipoListado = 7;
            Listado.UnidadMedida = UnidadMedida.UnidadMedidaID ? UnidadMedida.UnidadMedidaID : "";
            console.log("CantidadesDelMenuDashboardTubos: " + JSON.stringify(Listado));

            ObtenerAccionesListadoTubos(Listado);
        };
        function CantidadesDelMenuDashboardAccesorios() {
            var Listado;
            Listado = { ProyectoID: "", ClienteID: "", FolioAvisoEntradaID: "", PackingListID: "", TipoMaterialID: "", FechaInicial: "", FechaFinal: "", token: "", TipoListado: "", UnidadMedida: "" };

            var d = new Date($("#FechaInicial").data("kendoDatePicker").value());
            var d1 = new Date($("#FechaFinal").data("kendoDatePicker").value());

            Listado.ProyectoID = $("#ProyectoID").data("kendoComboBox").value();
            Listado.ClienteID = $("#ClienteID").data("kendoComboBox").value();
            Listado.FolioAvisoEntradaID = FolioAvisoEntrada.FolioAvisoEntradaID ? FolioAvisoEntrada.FolioAvisoEntradaID : "";
            Listado.PackingListID = PackingList.PackingListID ? PackingList.PackingListID : "";;
            Listado.TipoMaterialID = 2;
            Listado.FechaInicial = obtenerFormatoFechaConHora(d);
            Listado.FechaFinal = obtenerFormatoFechaConHora(d1);
            Listado.token = Cookies.get("token");
            Listado.TipoListado = 7;
            Listado.UnidadMedida = UnidadMedida.UnidadMedidaID ? UnidadMedida.UnidadMedidaID : "";
            console.log("CantidadesDelMenuDashboardAccesorios: " + JSON.stringify(Listado));

            ObtenerAccionesListadoAccesorios(Listado);
        };

        
        function obtenerFormatoFechaSinHoras(d) {
            var curr_date = d.getDate();
            var curr_month = d.getMonth() + 1; //Months are zero based
            var curr_year = d.getFullYear();

            return curr_year + "-" + curr_month + "-" + curr_date;
        };

        function obtenerFormatoFechaConHora(d) {
            var curr_date = d.getDate();
            var curr_month = d.getMonth() + 1; //Months are zero based
            var curr_year = d.getFullYear();
            
            var horaActual = new Date();
            
            return curr_year + "-" + curr_month + "-" + curr_date + " " + horaActual.getHours() + ":" + horaActual.getMinutes() + ":" + horaActual.getSeconds();
        };


        function ControlErroresObjetosComboBox(control, result) {
            if (Error(result)) {
                $("#" + control).data("kendoComboBox").dataSource.data(result);
            } else {
                $("#" + control).data("kendoComboBox").dataSource.data([]);
            };
        };
    }

    @section JavascriptDocumentReadyFunctions {

    //$authorizationModel["Aviso Entrada"] = $AvisoLLegadaModel;
    CargaInicial();

        
    }
</script>
